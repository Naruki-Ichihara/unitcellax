name: Matrix Tests

on:
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:
    # Allow manual triggering
  push:
    branches: [ main ]
    paths:
      - 'setup.py'
      - 'setup.cfg'
      - 'pyproject.toml'
      - 'Dockerfile'
      - 'docker-compose.yml'

jobs:
  matrix-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.11', '3.12']
        test-type: ['unit', 'integration', 'pbc']
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build development container with Python ${{ matrix.python-version }}
      run: |
        # Modify Dockerfile to use specific Python version if needed
        # For now, use the base NVIDIA JAX image which uses Python 3.12
        docker compose build --no-cache
        
    - name: Start development environment
      run: |
        docker compose up -d
        
    - name: Wait for container to be ready
      run: |
        sleep 15
        docker compose ps
        
    - name: Install dependencies
      run: |
        docker exec unitcellax bash -c "
          apt update && apt install -y fenicsx
          pip install -e .
          pip install pytest pytest-cov pytest-xdist
        "
        
    - name: Run unit tests
      if: matrix.test-type == 'unit'
      run: |
        docker exec unitcellax bash -c "
          cd /workspace
          pytest tests/test_environment.py tests/test_pbc.py -v --cov=unitcellax --cov-report=xml
        "
        
    - name: Run integration tests
      if: matrix.test-type == 'integration'
      run: |
        docker exec unitcellax bash -c "
          cd /workspace
          pytest tests/ -m integration -v || echo 'Some integration tests may fail without GPU'
        "
        
    - name: Run PBC tests with coverage
      if: matrix.test-type == 'pbc'
      run: |
        docker exec unitcellax bash -c "
          cd /workspace
          pytest tests/test_pbc.py -v --cov=unitcellax.pbc --cov-report=xml --cov-report=html
        "
        
    - name: Upload coverage reports
      if: matrix.test-type == 'unit' || matrix.test-type == 'pbc'
      uses: actions/upload-artifact@v3
      with:
        name: coverage-${{ matrix.python-version }}-${{ matrix.test-type }}
        path: |
          coverage.xml
          htmlcov/
          
    - name: Clean up
      if: always()
      run: |
        docker compose down
        
  compatibility-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install package dependencies only (no container)
      run: |
        pip install --upgrade pip
        # Install core dependencies without GPU/FEniCS for compatibility testing
        pip install numpy==1.26.0 scipy matplotlib meshio jax
        pip install -e . || echo "Package installation failed (expected without full dependencies)"
        
    - name: Test basic imports
      run: |
        python -c "
        try:
            from unitcellax.pbc import PeriodicPairing, prolongation_matrix, periodic_bc_3D
            print('✓ PBC module imports successfully')
        except ImportError as e:
            print(f'✗ PBC import failed: {e}')
            
        try:
            from unitcellax.unitcell import UnitCell
            print('✓ UnitCell imports successfully')
        except ImportError as e:
            print(f'✗ UnitCell import failed: {e}')
        "
        
  performance-test:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build and start container
      run: |
        docker compose build --no-cache
        docker compose up -d
        sleep 20
        
    - name: Install dependencies with performance tools
      run: |
        docker exec unitcellax bash -c "
          apt update && apt install -y fenicsx
          pip install -e .
          pip install pytest pytest-benchmark memory-profiler
        "
        
    - name: Run performance benchmarks
      run: |
        docker exec unitcellax bash -c "
          cd /workspace
          python -c 'import time; from unitcellax.pbc import prolongation_matrix, periodic_bc_3D; from unitcellax.fem.mesh import box_mesh; from unitcellax.unitcell import UnitCell; exec(\"class TestUnitCell(UnitCell):\n    def mesh_build(self, **kwargs):\n        return box_mesh(5, 5, 5, 1.0, 1.0, 1.0)\"); unit_cell = TestUnitCell(); start = time.time(); pairings = periodic_bc_3D(unit_cell, vec=3, dim=3); pbc_time = time.time() - start; print(f\"PBC generation: {pbc_time:.4f}s for {len(pairings)} pairings\"); start = time.time(); P = prolongation_matrix(pairings, unit_cell.mesh, vec=3); pmat_time = time.time() - start; print(f\"Matrix construction: {pmat_time:.4f}s for {P.shape[0]}x{P.shape[1]} matrix\")'
        "
        
    - name: Clean up
      if: always()
      run: |
        docker compose down